version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.2.1
  kubernetes: circleci/kubernetes@1.3.1
  helm: circleci/helm@2.0.1
  node: circleci/node@5.2.0

jobs:
  build:
    machine:
      image: ubuntu-2204:2024.01.1
      resource_class: large
    steps:
      - checkout
      - node/install:
          node-version: "22.3"
      - run:
          name: Install dependencies
          command: |
            npm install
      - run:
          name: Run tests
          command: |
            npm run test
      - run:
          name: Build project
          command: |
            npm run build

  build_docker:
    machine:
      image: ubuntu-2204:2024.01.1
      resource_class: large
    steps:
      - checkout
      - aws-ecr/build-image:
          push-image: false
          dockerfile: Dockerfile
          path: ./
          build-path: ./
          tag: "$CIRCLE_SHA1,$CIRCLE_TAG"
          repo: "simple-staking"
      - run:
          name: Save Docker image to export it to workspace
          command: |
            docker save $(docker image ls --format '{{.Repository}}:{{.Tag}}') > /tmp/simple-staking.tar
      - persist_to_workspace:
          root: /tmp
          paths:
            - simple-staking.tar

  push_docker:
    machine:
      image: ubuntu-2204:2024.01.1
      resource_class: large
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Load Docker image from workspace
          command: |
            docker load -i /tmp/simple-staking.tar
      - aws-ecr/ecr-login:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          region: "$AWS_REGION"
      - aws-ecr/push-image:
          registry-id: AWS_ECR_REGISTRY_ID
          region: "$AWS_REGION"
          repo: "simple-staking"
          tag: "$CIRCLE_SHA1,$CIRCLE_TAG"

workflows:
  CICD:
    jobs:
      - build
      - build_docker:
          filters:
            tags:
              only: /.*/
            branches:
              only:
                - dev
                - main
      - push_docker:
          requires:
            - build_docker
          filters:
            tags:
              only: /.*/
            branches:
              only:
                - dev
                - main
